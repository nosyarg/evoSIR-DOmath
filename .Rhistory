pubs <- read.csv("~/Desktop/machinelearning/pubtrain.csv")
dems <- read.csv("~/Desktop/machinelearning/demtrain.csv")
pubmod <- lm(vote~.-X,data=pubs)
demmod <- lm(vote~.-X,data=dems)
pubmod
demmod
demmod.cor
cor(demmod)
summary(pubmod)
summary(demmod)
head(data)
names(data)
names(data)
rm(list = ls())
set.seed(1)
importantvars <- c("party","vote","special_election","tenure_at_beginning_of_term","yeatotal","retirement","appropriations","smallbusiness","budget","armedservices","foreignaffairs","oversightandgovernmentreform","naturalresources","educationandtheworkforce","rules","intelligence","houseadministration","transportationandinfrastructure","judiciary","energyandcommerce","homelandsecurity","veteransaffairs","financialservices","waysandmeans","sciencespaceandtechnology","agriculture","t0", "t1", "t2", "t3", "t4", "t5", "t6", "t7", "t8", "t9", "t10", "t11", "t12", "t13", "t14", "t15", "t16", "t17", "t18", "t19", "t20", "t21", "t22", "t23", "t24", "t25", "t26", "t27", "t28", "t29","t30", "t31", "t32", "t33", "t34", "t35", "t36", "t37", "t38", "t39", "t40", "t41", "t42", "t43", "t44", "t45", "t46", "t47", "t48", "t49")
###########UNCOMMENT BELOW FIRST TIME################
data <- read.csv("~/Desktop/machinelearning/r113c.csv")
justimportant <- na.omit(data[ ,importantvars])
trainindex <- runif(nrow(justimportant)) < .6
pubs <- justimportant[justimportant$party==200,]
dems <- justimportant[justimportant$party==100,]
pubtrainindex <- runif(nrow(pubs)) < .6
demtrainindex <- runif(nrow(dems)) < .6
pubtrain <- pubs[pubtrainindex, ]
demtrain <- dems[demtrainindex, ]
pubtest <- pubs[!pubtrainindex, ]
demtest <- dems[!demtrainindex, ]
write.csv(pubtest, file = "~/Desktop/machinelearning/pubtest.csv")
write.csv(pubtrain,file = "~/Desktop/machinelearning/pubtrain.csv")
write.csv(demtest, file = "~/Desktop/machinelearning/demtest.csv")
write.csv(demtrain,file = "~/Desktop/machinelearning/demtrain.csv")
###########UNCOMMENT ABOVE FIRST TIME################
pubs <- read.csv("~/Desktop/machinelearning/pubtrain.csv")
dems <- read.csv("~/Desktop/machinelearning/demtrain.csv")
pubmod <- lm(vote~.-X,data=pubs)
demmod <- lm(vote~.-X,data=dems)
pubmod
demmod
summary(demmod)
demtrain$tq
demtrain$t1
demtrain$t2
rm(list = ls())
set.seed(1)
importantvars <- c("party","vote","special_election","tenure_at_beginning_of_term","yeatotal","retirement","appropriations","smallbusiness","budget","armedservices","foreignaffairs","oversightandgovernmentreform","naturalresources","educationandtheworkforce","rules","intelligence","houseadministration","transportationandinfrastructure","judiciary","energyandcommerce","homelandsecurity","veteransaffairs","financialservices","waysandmeans","sciencespaceandtechnology","agriculture","t0", "t1", "t2", "t3", "t4", "t5", "t6", "t7", "t8", "t9", "t10", "t11", "t12", "t13", "t14", "t15", "t16", "t17", "t18", "t19", "t20", "t21", "t22", "t23", "t24", "t25", "t26", "t27", "t28", "t29","t30", "t31", "t32", "t33", "t34", "t35", "t36", "t37", "t38", "t39", "t40", "t41", "t42", "t43", "t44", "t45", "t46", "t47", "t48", "t49")
###########UNCOMMENT BELOW FIRST TIME################
#data <- read.csv("~/Desktop/machinelearning/r113c.csv")
#justimportant <- na.omit(data[ ,importantvars])
#trainindex <- runif(nrow(justimportant)) < .6
#pubs <- justimportant[justimportant$party==200,]
#dems <- justimportant[justimportant$party==100,]
#pubtrainindex <- runif(nrow(pubs)) < .6
#demtrainindex <- runif(nrow(dems)) < .6
#pubtrain <- pubs[pubtrainindex, ]
#demtrain <- dems[demtrainindex, ]
#pubtest <- pubs[!pubtrainindex, ]
#demtest <- dems[!demtrainindex, ]
#write.csv(pubtest, file = "~/Desktop/machinelearning/pubtest.csv")
#write.csv(pubtrain,file = "~/Desktop/machinelearning/pubtrain.csv")
#write.csv(demtest, file = "~/Desktop/machinelearning/demtest.csv")
#write.csv(demtrain,file = "~/Desktop/machinelearning/demtrain.csv")
###########UNCOMMENT ABOVE FIRST TIME################
pubs <- read.csv("~/Desktop/machinelearning/pubtrain.csv")
dems <- read.csv("~/Desktop/machinelearning/demtrain.csv")
pubmod <- lm(vote~.-X,data=pubs)
demmod <- lm(vote~.-X,data=dems)
summary(pubmod)
summary(demmod)
head(pubtrain)
rm(list = ls())
set.seed(1)
importantvars <- c("party","vote","special_election","tenure_at_beginning_of_term","retirement","appropriations","smallbusiness","budget","armedservices","foreignaffairs","oversightandgovernmentreform","naturalresources","educationandtheworkforce","rules","intelligence","houseadministration","transportationandinfrastructure","judiciary","energyandcommerce","homelandsecurity","veteransaffairs","financialservices","waysandmeans","sciencespaceandtechnology","agriculture","t0", "t1", "t2", "t3", "t4", "t5", "t6", "t7", "t8", "t9", "t10", "t11", "t12", "t13", "t14", "t15", "t16", "t17", "t18", "t19", "t20", "t21", "t22", "t23", "t24", "t25", "t26", "t27", "t28", "t29","t30", "t31", "t32", "t33", "t34", "t35", "t36", "t37", "t38", "t39", "t40", "t41", "t42", "t43", "t44", "t45", "t46", "t47", "t48", "t49")
###########UNCOMMENT BELOW FIRST TIME################
data <- read.csv("~/Desktop/machinelearning/r113c.csv")
justimportant <- na.omit(data[ ,importantvars])
trainindex <- runif(nrow(justimportant)) < .6
pubs <- justimportant[justimportant$party==200,]
dems <- justimportant[justimportant$party==100,]
pubtrainindex <- runif(nrow(pubs)) < .6
demtrainindex <- runif(nrow(dems)) < .6
pubtrain <- pubs[pubtrainindex, ]
demtrain <- dems[demtrainindex, ]
pubtest <- pubs[!pubtrainindex, ]
demtest <- dems[!demtrainindex, ]
write.csv(pubtest, file = "~/Desktop/machinelearning/pubtest.csv")
write.csv(pubtrain,file = "~/Desktop/machinelearning/pubtrain.csv")
write.csv(demtest, file = "~/Desktop/machinelearning/demtest.csv")
write.csv(demtrain,file = "~/Desktop/machinelearning/demtrain.csv")
###########UNCOMMENT ABOVE FIRST TIME################
pubs <- read.csv("~/Desktop/machinelearning/pubtrain.csv")
dems <- read.csv("~/Desktop/machinelearning/demtrain.csv")
pubmod <- lm(vote~.-X,data=pubs)
demmod <- lm(vote~.-X,data=dems)
head(pubs)
pubmod
t1
pubs
help(lm)
rm(list = ls())
set.seed(1)
importantvars <- c("party","vote","special_election","tenure_at_beginning_of_term","retirement","appropriations","smallbusiness","budget","armedservices","foreignaffairs","oversightandgovernmentreform","naturalresources","educationandtheworkforce","rules","intelligence","houseadministration","transportationandinfrastructure","judiciary","energyandcommerce","homelandsecurity","veteransaffairs","financialservices","waysandmeans","sciencespaceandtechnology","agriculture","t0", "t1", "t2", "t3", "t4", "t5", "t6", "t7", "t8", "t9", "t10", "t11", "t12", "t13", "t14", "t15", "t16", "t17", "t18", "t19", "t20", "t21", "t22", "t23", "t24", "t25", "t26", "t27", "t28", "t29","t30", "t31", "t32", "t33", "t34", "t35", "t36", "t37", "t38", "t39", "t40", "t41", "t42", "t43", "t44", "t45", "t46", "t47", "t48", "t49")
###########UNCOMMENT BELOW FIRST TIME################
#data <- read.csv("~/Desktop/machinelearning/r113c.csv")
#justimportant <- na.omit(data[ ,importantvars])
#trainindex <- runif(nrow(justimportant)) < .6
#pubs <- justimportant[justimportant$party==200,]
#dems <- justimportant[justimportant$party==100,]
#pubtrainindex <- runif(nrow(pubs)) < .6
#demtrainindex <- runif(nrow(dems)) < .6
#pubtrain <- pubs[pubtrainindex, ]
#demtrain <- dems[demtrainindex, ]
#pubtest <- pubs[!pubtrainindex, ]
#demtest <- dems[!demtrainindex, ]
#write.csv(pubtest, file = "~/Desktop/machinelearning/pubtest.csv")
#write.csv(pubtrain,file = "~/Desktop/machinelearning/pubtrain.csv")
#write.csv(demtest, file = "~/Desktop/machinelearning/demtest.csv")
#write.csv(demtrain,file = "~/Desktop/machinelearning/demtrain.csv")
###########UNCOMMENT ABOVE FIRST TIME################
pubs <- read.csv("~/Desktop/machinelearning/pubtrain.csv")
dems <- read.csv("~/Desktop/machinelearning/demtrain.csv")
pubmod <- lm(vote~.-X,data=pubs)
demmod <- lm(vote~.-X,data=dems)
head(pubs)
summary(pubmod)
head(pubs)
summary(pubmod)
summary(demmod)
rm(list = ls())
set.seed(1)
importantvars <- c("party","vote","special_election","tenure_at_beginning_of_term","retirement","appropriations","smallbusiness","budget","armedservices","foreignaffairs","oversightandgovernmentreform","naturalresources","educationandtheworkforce","rules","intelligence","houseadministration","transportationandinfrastructure","judiciary","energyandcommerce","homelandsecurity","veteransaffairs","financialservices","waysandmeans","sciencespaceandtechnology","agriculture","tt0", "tt1", "tt2", "tt3", "tt4", "tt5", "tt6", "tt7", "tt8", "tt9", "tt10", "tt11", "tt12", "tt13", "tt14", "tt15", "tt16", "tt17", "tt18", "tt19", "tt20", "tt21", "tt22", "tt23", "tt24", "tt25", "tt26", "tt27", "tt28", "tt29","tt30", "tt31", "tt32", "tt33", "tt34", "tt35", "tt36", "tt37", "tt38", "tt39", "tt40", "tt41", "tt42", "tt43", "tt44", "tt45", "tt46", "tt47", "tt48", "tt49")
###########UNCOMMENT BELOW FIRST TIME################
#data <- read.csv("~/Desktop/machinelearning/r113c.csv")
#justimportant <- na.omit(data[ ,importantvars])
#trainindex <- runif(nrow(justimportant)) < .6
#pubs <- justimportant[justimportant$party==200,]
#dems <- justimportant[justimportant$party==100,]
#pubtrainindex <- runif(nrow(pubs)) < .6
#demtrainindex <- runif(nrow(dems)) < .6
#pubtrain <- pubs[pubtrainindex, ]
#demtrain <- dems[demtrainindex, ]
#pubtest <- pubs[!pubtrainindex, ]
#demtest <- dems[!demtrainindex, ]
#write.csv(pubtest, file = "~/Desktop/machinelearning/pubtest.csv")
#write.csv(pubtrain,file = "~/Desktop/machinelearning/pubtrain.csv")
#write.csv(demtest, file = "~/Desktop/machinelearning/demtest.csv")
#write.csv(demtrain,file = "~/Desktop/machinelearning/demtrain.csv")
###########UNCOMMENT ABOVE FIRST TIME################
pubs <- read.csv("~/Desktop/machinelearning/pubtrain.csv")
dems <- read.csv("~/Desktop/machinelearning/demtrain.csv")
pubmod <- lm(vote~.-X,data=pubs)
demmod <- lm(vote~.-X,data=dems)
rm(list = ls())
set.seed(1)
importantvars <- c("party","vote","special_election","tenure_at_beginning_of_term","retirement","appropriations","smallbusiness","budget","armedservices","foreignaffairs","oversightandgovernmentreform","naturalresources","educationandtheworkforce","rules","intelligence","houseadministration","transportationandinfrastructure","judiciary","energyandcommerce","homelandsecurity","veteransaffairs","financialservices","waysandmeans","sciencespaceandtechnology","agriculture","tt0", "tt1", "tt2", "tt3", "tt4", "tt5", "tt6", "tt7", "tt8", "tt9", "tt10", "tt11", "tt12", "tt13", "tt14", "tt15", "tt16", "tt17", "tt18", "tt19", "tt20", "tt21", "tt22", "tt23", "tt24", "tt25", "tt26", "tt27", "tt28", "tt29","tt30", "tt31", "tt32", "tt33", "tt34", "tt35", "tt36", "tt37", "tt38", "tt39", "tt40", "tt41", "tt42", "tt43", "tt44", "tt45", "tt46", "tt47", "tt48", "tt49")
###########UNCOMMENT BELOW FIRST TIME################
data <- read.csv("~/Desktop/machinelearning/r113c.csv")
justimportant <- na.omit(data[ ,importantvars])
trainindex <- runif(nrow(justimportant)) < .6
pubs <- justimportant[justimportant$party==200,]
dems <- justimportant[justimportant$party==100,]
pubtrainindex <- runif(nrow(pubs)) < .6
demtrainindex <- runif(nrow(dems)) < .6
pubtrain <- pubs[pubtrainindex, ]
demtrain <- dems[demtrainindex, ]
pubtest <- pubs[!pubtrainindex, ]
demtest <- dems[!demtrainindex, ]
write.csv(pubtest, file = "~/Desktop/machinelearning/pubtest.csv")
write.csv(pubtrain,file = "~/Desktop/machinelearning/pubtrain.csv")
write.csv(demtest, file = "~/Desktop/machinelearning/demtest.csv")
write.csv(demtrain,file = "~/Desktop/machinelearning/demtrain.csv")
###########UNCOMMENT ABOVE FIRST TIME################
pubs <- read.csv("~/Desktop/machinelearning/pubtrain.csv")
dems <- read.csv("~/Desktop/machinelearning/demtrain.csv")
pubmod <- lm(vote~.-X,data=pubs)
demmod <- lm(vote~.-X,data=dems)
summary(pubmod)
summary(demmod)
rm(list = ls())
set.seed(1)
importantvars <- c("party","new_vote","special_election","tenure_at_beginning_of_term","retirement","appropriations","smallbusiness","budget","armedservices","foreignaffairs","oversightandgovernmentreform","naturalresources","educationandtheworkforce","rules","intelligence","houseadministration","transportationandinfrastructure","judiciary","energyandcommerce","homelandsecurity","veteransaffairs","financialservices","waysandmeans","sciencespaceandtechnology","agriculture","tt0", "tt1", "tt2", "tt3", "tt4", "tt5", "tt6", "tt7", "tt8", "tt9", "tt10", "tt11", "tt12", "tt13", "tt14", "tt15", "tt16", "tt17", "tt18", "tt19", "tt20", "tt21", "tt22", "tt23", "tt24", "tt25", "tt26", "tt27", "tt28", "tt29","tt30", "tt31", "tt32", "tt33", "tt34", "tt35", "tt36", "tt37", "tt38", "tt39", "tt40", "tt41", "tt42", "tt43", "tt44", "tt45", "tt46", "tt47", "tt48", "tt49")
###########UNCOMMENT BELOW FIRST TIME################
data <- read.csv("~/Desktop/machinelearning/r113c.csv")
justimportant <- na.omit(data[ ,importantvars])
trainindex <- runif(nrow(justimportant)) < .6
pubs <- justimportant[justimportant$party==200,]
dems <- justimportant[justimportant$party==100,]
pubtrainindex <- runif(nrow(pubs)) < .6
demtrainindex <- runif(nrow(dems)) < .6
pubtrain <- pubs[pubtrainindex, ]
demtrain <- dems[demtrainindex, ]
pubtest <- pubs[!pubtrainindex, ]
demtest <- dems[!demtrainindex, ]
write.csv(pubtest, file = "~/Desktop/machinelearning/pubtest.csv")
write.csv(pubtrain,file = "~/Desktop/machinelearning/pubtrain.csv")
write.csv(demtest, file = "~/Desktop/machinelearning/demtest.csv")
write.csv(demtrain,file = "~/Desktop/machinelearning/demtrain.csv")
###########UNCOMMENT ABOVE FIRST TIME################
pubs <- read.csv("~/Desktop/machinelearning/pubtrain.csv")
dems <- read.csv("~/Desktop/machinelearning/demtrain.csv")
pubmod <- lm(new_vote~.-X,data=pubs)
demmod <- lm(new_vote~.-X,data=dems)
pubmod
summary(pubmod)
summary(demmod)
summary(demmod)
summary(pubmod)
summary(pubmod)
summary(demmod)
summary(pubmod)
summary(demmod)
rm(list = ls())
set.seed(5)
importantvars <- c("party","new_vote","special_election","tenure_at_beginning_of_term","retirement","appropriations","smallbusiness","budget","armedservices","foreignaffairs","oversightandgovernmentreform","naturalresources","educationandtheworkforce","rules","intelligence","houseadministration","transportationandinfrastructure","judiciary","energyandcommerce","homelandsecurity","veteransaffairs","financialservices","waysandmeans","sciencespaceandtechnology","agriculture","tt0", "tt1", "tt2", "tt3", "tt4", "tt5", "tt6", "tt7", "tt8", "tt9", "tt10", "tt11", "tt12", "tt13", "tt14", "tt15", "tt16", "tt17", "tt18", "tt19", "tt20", "tt21", "tt22", "tt23", "tt24", "tt25", "tt26", "tt27", "tt28", "tt29","tt30", "tt31", "tt32", "tt33", "tt34", "tt35", "tt36", "tt37", "tt38", "tt39", "tt40", "tt41", "tt42", "tt43", "tt44", "tt45", "tt46", "tt47", "tt48", "tt49")
###########UNCOMMENT BELOW FIRST TIME################
data <- read.csv("~/Desktop/machinelearning/r113c.csv")
justimportant <- na.omit(data[ ,importantvars])
trainindex <- runif(nrow(justimportant)) < .6
pubs <- justimportant[justimportant$party==200,]
dems <- justimportant[justimportant$party==100,]
pubtrainindex <- runif(nrow(pubs)) < .6
demtrainindex <- runif(nrow(dems)) < .6
pubtrain <- pubs[pubtrainindex, ]
demtrain <- dems[demtrainindex, ]
pubtest <- pubs[!pubtrainindex, ]
demtest <- dems[!demtrainindex, ]
write.csv(pubtest, file = "~/Desktop/machinelearning/pubtest.csv")
write.csv(pubtrain,file = "~/Desktop/machinelearning/pubtrain.csv")
write.csv(demtest, file = "~/Desktop/machinelearning/demtest.csv")
write.csv(demtrain,file = "~/Desktop/machinelearning/demtrain.csv")
###########UNCOMMENT ABOVE FIRST TIME################
pubs <- read.csv("~/Desktop/machinelearning/pubtrain.csv")
dems <- read.csv("~/Desktop/machinelearning/demtrain.csv")
pubmod <- lm(new_vote~.-X,data=pubs)
demmod <- lm(new_vote~.-X,data=dems)
summary(demmod)
importantvars <- c("party","new_vote","special_election","tenure_at_beginning_of_term","retirement","appropriations","smallbusiness","budget","armedservices","foreignaffairs","oversightandgovernmentreform","naturalresources","educationandtheworkforce","rules","intelligence","houseadministration","transportationandinfrastructure","judiciary","energyandcommerce","homelandsecurity","veteransaffairs","financialservices","waysandmeans","sciencespaceandtechnology","agriculture","tt0", "tt1", "tt2", "tt3", "tt4", "tt5", "tt6", "tt7", "tt8", "tt9", "tt10", "tt11", "tt12", "tt13", "tt14", "tt15", "tt16", "tt17", "tt18", "tt19", "tt20", "tt21", "tt22", "tt23", "tt24", "tt25", "tt26", "tt27", "tt28", "tt29","tt30", "tt31", "tt32", "tt33", "tt34", "tt35", "tt36", "tt37", "tt38", "tt39", "tt40", "tt41", "tt42", "tt43", "tt44", "tt45", "tt46", "tt47", "tt48", "tt49")
justimportant <- na.omit(data[ ,importantvars])
pubs
justimportant
summary(pubmod)
summary(demmod)
rm(list = ls())
set.seed(5)
importantvars <- c("party","new_vote","special_election","tenure_at_beginning_of_term","retirement","appropriations","smallbusiness","budget","armedservices","foreignaffairs","oversightandgovernmentreform","naturalresources","educationandtheworkforce","rules","intelligence","houseadministration","transportationandinfrastructure","judiciary","energyandcommerce","homelandsecurity","veteransaffairs","financialservices","waysandmeans","sciencespaceandtechnology","agriculture","tt0", "tt1", "tt2", "tt3", "tt4", "tt5", "tt6", "tt7", "tt8", "tt9", "tt10", "tt11", "tt12", "tt13", "tt14", "tt15", "tt16", "tt17", "tt18", "tt19", "tt20", "tt21", "tt22", "tt23", "tt24", "tt25", "tt26", "tt27", "tt28", "tt29","tt30", "tt31", "tt32", "tt33", "tt34", "tt35", "tt36", "tt37", "tt38", "tt39", "tt40", "tt41", "tt42", "tt43", "tt44", "tt45", "tt46", "tt47", "tt48", "tt49")
###########UNCOMMENT BELOW FIRST TIME################
data <- read.csv("~/Desktop/machinelearning/r113c.csv")
#justimportant <- na.omit(data[ ,importantvars])
justimportant <- na.omit(data)
pubs <- justimportant[justimportant$party==200,]
dems <- justimportant[justimportant$party==100,]
pubtrainindex <- runif(nrow(pubs)) < .6
demtrainindex <- runif(nrow(dems)) < .6
pubtrain <- pubs[pubtrainindex, ]
demtrain <- dems[demtrainindex, ]
pubtest <- pubs[!pubtrainindex, ]
demtest <- dems[!demtrainindex, ]
write.csv(pubtest, file = "~/Desktop/machinelearning/pubtest.csv")
write.csv(pubtrain,file = "~/Desktop/machinelearning/pubtrain.csv")
write.csv(demtest, file = "~/Desktop/machinelearning/demtest.csv")
write.csv(demtrain,file = "~/Desktop/machinelearning/demtrain.csv")
###########UNCOMMENT ABOVE FIRST TIME################
pubs <- read.csv("~/Desktop/machinelearning/pubtrain.csv")
dems <- read.csv("~/Desktop/machinelearning/demtrain.csv")
pubmod <- lm(new_vote~.-X,data=pubs)
demmod <- lm(new_vote~.-X,data=dems)
summary(demmod)
#setwd('~/Desktop/evoSIR-DOmath')
setwd('~/evosir')
library(ggplot2)
rm(list = ls())
if(FALSE){
#DIFFEQ WITH REWIRING
#observed epidemic size over time with rewiring
theorydata <- read.csv('theory/ODE3.csv')
realtimeode3rewire <- ggplot(theorydata, aes(t)) +
stat_smooth(aes(y = S), method = "loess", size = 1, span=0.05, linetype="dotted", color="black") +
stat_smooth(aes(y = I), method = "loess", size = 1, span=0.05, linetype="solid", color="black") +
stat_smooth(aes(y = R), method = "loess", size = 1, span=0.05, linetype="dashed", color="black") +
theme_bw() +
xlim(0,6)
labs(y = NULL)
ggsave("paper_plots/realtimeode3.png", plot = realtimeode3rewire, device="png")#,path = "~/Desktop/evoSIR-DOmath/paper_plots")
#theoretical epidemic size over time with rewiring
simulationdata <- read.csv('data/realconsttime.csv')
realtimesimgraphrewire <- ggplot(simulationdata, aes(t)) +
stat_smooth(aes(y = s), method = "loess", size = 1, span=0.001, linetype="dotted", color="black") +
stat_smooth(aes(y = i), method = "loess", size = 1, span=0.001, linetype="solid", color="black") +
stat_smooth(aes(y = r), method = "loess", size = 1, span=0.001, linetype="dashed", color="black") +
theme_bw() +
xlim(0,6)
labs(y = NULL)
ggsave("paper_plots/realconsttimesimgraph.png", plot = realtimesimgraphrewire, device="png")#,path = "~/Desktop/evoSIR-DOmath/paper_plots")
#END DIFFEQ WITH REWIRING
}
#observed epidemic size at crit val exp time
simulationdata <- read.csv('data/critvalsim.csv')
simulationdata$s = simulationdata$s/simulationdata$n
simulationdata$i = simulationdata$i/simulationdata$n
simulationdata$r = simulationdata$r/simulationdata$n
realtimeode3rewire <- ggplot(simulationdata, aes(t)) +
stat_smooth(aes(y = s), method = "loess", size = 1, span=0.001, linetype="dotted", color="black") +
stat_smooth(aes(y = i), method = "loess", size = 1, span=0.001, linetype="solid", color="black") +
stat_smooth(aes(y = r), method = "loess", size = 1, span=0.001, linetype="dashed", color="black") +
theme_bw() +
xlim(0,30) +
labs(y = NULL)
ggsave("paper_plots/critval.png", plot = realtimeode3rewire, device="png")#,path = "~/Desktop/evoSIR-DOmath/paper_plots")
#observed epidemic size at crit val exp time
simulationdata <- read.csv('data/critvalsim.csv')
simulationdata$s = simulationdata$s/simulationdata$n
simulationdata$i = simulationdata$i/simulationdata$n
simulationdata$r = simulationdata$r/simulationdata$n
realtimeode3rewire <- ggplot(simulationdata, aes(t)) +
stat_smooth(aes(y = s), method = "loess", size = 1, span=0.001, linetype="dotted", color="black") +
stat_smooth(aes(y = i), method = "loess", size = 1, span=0.001, linetype="solid", color="black") +
stat_smooth(aes(y = r), method = "loess", size = 1, span=0.001, linetype="dashed", color="black") +
theme_bw() +
xlim(0,30) +
labs(y = NULL)
ggsave("paper_plots/critval.png", plot = realtimeode3rewire, device="png")#,path = "~/Desktop/evoSIR-DOmath/paper_plots")
#observed epidemic size over time without rewiring
theorydata <- read.csv('theory/ODE3.csv')
realtimeode3rewire <- ggplot(theorydata, aes(t)) +
stat_smooth(aes(y = S), method = "loess", size = 1, span=0.05, linetype="dotted", color="black") +
stat_smooth(aes(y = I), method = "loess", size = 1, span=0.05, linetype="solid", color="black") +
stat_smooth(aes(y = R), method = "loess", size = 1, span=0.05, linetype="dashed", color="black") +
theme_bw() +
xlim(0,8) +
labs(y = NULL)
ggsave("paper_plots/realtimeode3.png", plot = realtimeode3rewire, device="png")#,path = "~/Desktop/evoSIR-DOmath/paper_plots")
#theoretical epidemic size over time
simulationdata <- read.csv('data/realexptime.csv')
simulationdata$s = simulationdata$s/simulationdata$n
simulationdata$i = simulationdata$i/simulationdata$n
simulationdata$r = simulationdata$r/simulationdata$n
realtimesimgraphrewire <- ggplot(simulationdata, aes(t)) +
stat_smooth(aes(y = s), method = "loess", size = 1, span=0.01, linetype="dotted", color="black") +
stat_smooth(aes(y = i), method = "loess", size = 1, span=0.01, linetype="solid", color="black") +
stat_smooth(aes(y = r), method = "loess", size = 1, span=0.01, linetype="dashed", color="black") +
theme_bw() +
xlim(0,8) +
labs(y = NULL)
ggsave("paper_plots/realtimesimgraph.png", plot = realtimesimgraphrewire, device="png")#,path = "~/Desktop/evoSIR-DOmath/paper_plots")
#epidemic size vs lambda constant time
plot.new()
simdata <- read.csv('data/consttime.csv')
simdata <- simdata[simdata$rho == 4,]
simdata <- simdata[simdata$n == 100000,]
simdata <- simdata[(simdata$lambda < 1.4) & (simdata$lambda > .5),]
ode <- read.csv('theory/constrho4.csv')
lowerbound <- read.csv('theory/constrho4lower.csv')
consttimelambda <- ggplot() +
geom_point(aes(simdata$lambda,1-simdata$S)) +
geom_vline(xintercept = 1.0084) +
labs(y = "Size of Epidemic", x = expression(lambda)) +
title("Constant Time Recovery Size of Epidemic vs lambda") +
geom_line(aes(lowerbound$lambda,1-lowerbound$z),linetype = "solid") +
geom_line(aes(ode$lambda,ode$t), linetype = "dotted") +
xlim(.5,1.4) +
theme_bw()
ggsave("paper_plots/consttimelambda.png", plot = consttimelambda, device="png")#,path = "~/Desktop/evoSIR-DOmath/paper_plots")
#epidemic size vs lambda exponential time
simdata <- read.csv('data/exptime.csv')
simdata <- simdata[simdata$rho == 4,]
simdata <- simdata[simdata$n == 100000,]
simdata <- simdata[(simdata$lambda < 2) & (simdata$lambda > 0.0),]
lowerbound <- read.csv('theory/exprho4genfunc.csv')
ode <- read.csv('theory/exprho4size.csv')
newode <- read.csv('theory/ode3withrewiring.csv')
newode <- newode[newode$rho == 4,]
#newode <- head(newode,-2)
exptimelambda <- ggplot() +
geom_point(aes(simdata$lambda,1-simdata$S)) +
geom_vline(xintercept = 1.25) +
labs(y = "Size of Epidemic", x = expression(lambda)) +
title("Exponential Time Recovery Size of Epidemic vs lambda") +
geom_line(aes(lowerbound$lambda,1-lowerbound$z),linetype = "solid") +
geom_line(aes(ode$lambda,ode$t), linetype = "dotted") +
geom_line(aes(newode$lambda,newode$R), linetype = "dashed") +
theme_bw()+
xlim(0,2)
ggsave("paper_plots/exptimelambda.png", plot = exptimelambda, device="png")#,path = "~/Desktop/evoSIR-DOmath/paper_plots")
#observed epidemic size at crit val const time
simulationdata <- read.csv('data/realconsttime.csv')
simulationdata$s = simulationdata$s/simulationdata$n
simulationdata$i = simulationdata$i/simulationdata$n
simulationdata$r = simulationdata$r/simulationdata$n
realtimeode3rewire <- ggplot(simulationdata, aes(t)) +
stat_smooth(aes(y = s), method = "loess", size = 1, span=0.001, linetype="dotted", color="black") +
stat_smooth(aes(y = i), method = "loess", size = 1, span=0.001, linetype="solid", color="black") +
stat_smooth(aes(y = r), method = "loess", size = 1, span=0.001, linetype="dashed", color="black") +
theme_bw() +
xlim(0,30) +
labs(y = NULL)
ggsave("paper_plots/consttimecritval.png", plot = realtimeode3rewire, device="png")#,path = "~/Desktop/evoSIR-DOmath/paper_plots")
#setwd('~/Desktop/evoSIR-DOmath')
setwd('~/evosir')
library(ggplot2)
rm(list = ls())
if(FALSE){
#DIFFEQ WITH REWIRING
#observed epidemic size over time with rewiring
theorydata <- read.csv('theory/ODE3.csv')
realtimeode3rewire <- ggplot(theorydata, aes(t)) +
stat_smooth(aes(y = S), method = "loess", size = 1, span=0.05, linetype="dotted", color="black") +
stat_smooth(aes(y = I), method = "loess", size = 1, span=0.05, linetype="solid", color="black") +
stat_smooth(aes(y = R), method = "loess", size = 1, span=0.05, linetype="dashed", color="black") +
theme_bw() +
xlim(0,6)
labs(y = NULL)
ggsave("paper_plots/realtimeode3.png", plot = realtimeode3rewire, device="png")#,path = "~/Desktop/evoSIR-DOmath/paper_plots")
#theoretical epidemic size over time with rewiring
simulationdata <- read.csv('data/realconsttime.csv')
realtimesimgraphrewire <- ggplot(simulationdata, aes(t)) +
stat_smooth(aes(y = s), method = "loess", size = 1, span=0.001, linetype="dotted", color="black") +
stat_smooth(aes(y = i), method = "loess", size = 1, span=0.001, linetype="solid", color="black") +
stat_smooth(aes(y = r), method = "loess", size = 1, span=0.001, linetype="dashed", color="black") +
theme_bw() +
xlim(0,6)
labs(y = NULL)
ggsave("paper_plots/realconsttimesimgraph.png", plot = realtimesimgraphrewire, device="png")#,path = "~/Desktop/evoSIR-DOmath/paper_plots")
#END DIFFEQ WITH REWIRING
}
#observed epidemic size at crit val exp time
simulationdata <- read.csv('data/critvalsim.csv')
simulationdata$s = simulationdata$s/simulationdata$n
simulationdata$i = simulationdata$i/simulationdata$n
simulationdata$r = simulationdata$r/simulationdata$n
realtimeode3rewire <- ggplot(simulationdata, aes(t)) +
stat_smooth(aes(y = s), method = "loess", size = 1, span=0.001, linetype="dotted", color="black") +
stat_smooth(aes(y = i), method = "loess", size = 1, span=0.001, linetype="solid", color="black") +
stat_smooth(aes(y = r), method = "loess", size = 1, span=0.001, linetype="dashed", color="black") +
theme_bw() +
xlim(0,30) +
labs(y = NULL)
ggsave("paper_plots/critval.png", plot = realtimeode3rewire, device="png")#,path = "~/Desktop/evoSIR-DOmath/paper_plots")
#observed epidemic size at crit val const time
simulationdata <- read.csv('data/realconsttime.csv')
simulationdata$s = simulationdata$s/simulationdata$n
simulationdata$i = simulationdata$i/simulationdata$n
simulationdata$r = simulationdata$r/simulationdata$n
realtimeode3rewire <- ggplot(simulationdata, aes(t)) +
stat_smooth(aes(y = s), method = "loess", size = 1, span=0.001, linetype="dotted", color="black") +
stat_smooth(aes(y = i), method = "loess", size = 1, span=0.001, linetype="solid", color="black") +
stat_smooth(aes(y = r), method = "loess", size = 1, span=0.001, linetype="dashed", color="black") +
theme_bw() +
xlim(0,20) +
labs(y = NULL)
ggsave("paper_plots/consttimecritval.png", plot = realtimeode3rewire, device="png")#,path = "~/Desktop/evoSIR-DOmath/paper_plots")
#observed epidemic size over time without rewiring
theorydata <- read.csv('theory/ODE3.csv')
realtimeode3rewire <- ggplot(theorydata, aes(t)) +
stat_smooth(aes(y = S), method = "loess", size = 1, span=0.05, linetype="dotted", color="black") +
stat_smooth(aes(y = I), method = "loess", size = 1, span=0.05, linetype="solid", color="black") +
stat_smooth(aes(y = R), method = "loess", size = 1, span=0.05, linetype="dashed", color="black") +
theme_bw() +
xlim(0,8) +
labs(y = NULL)
ggsave("paper_plots/realtimeode3.png", plot = realtimeode3rewire, device="png")#,path = "~/Desktop/evoSIR-DOmath/paper_plots")
#theoretical epidemic size over time
simulationdata <- read.csv('data/realexptime.csv')
simulationdata$s = simulationdata$s/simulationdata$n
simulationdata$i = simulationdata$i/simulationdata$n
simulationdata$r = simulationdata$r/simulationdata$n
realtimesimgraphrewire <- ggplot(simulationdata, aes(t)) +
stat_smooth(aes(y = s), method = "loess", size = 1, span=0.01, linetype="dotted", color="black") +
stat_smooth(aes(y = i), method = "loess", size = 1, span=0.01, linetype="solid", color="black") +
stat_smooth(aes(y = r), method = "loess", size = 1, span=0.01, linetype="dashed", color="black") +
theme_bw() +
xlim(0,8) +
labs(y = NULL)
ggsave("paper_plots/realtimesimgraph.png", plot = realtimesimgraphrewire, device="png")#,path = "~/Desktop/evoSIR-DOmath/paper_plots")
#epidemic size vs lambda constant time
plot.new()
simdata <- read.csv('data/consttime.csv')
simdata <- simdata[simdata$rho == 4,]
simdata <- simdata[simdata$n == 100000,]
simdata <- simdata[(simdata$lambda < 1.4) & (simdata$lambda > .5),]
ode <- read.csv('theory/constrho4.csv')
lowerbound <- read.csv('theory/constrho4lower.csv')
consttimelambda <- ggplot() +
geom_point(aes(simdata$lambda,1-simdata$S)) +
geom_vline(xintercept = 1.0084) +
labs(y = "Size of Epidemic", x = expression(lambda)) +
title("Constant Time Recovery Size of Epidemic vs lambda") +
geom_line(aes(lowerbound$lambda,1-lowerbound$z),linetype = "solid") +
geom_line(aes(ode$lambda,ode$t), linetype = "dotted") +
xlim(.5,1.4) +
theme_bw()
ggsave("paper_plots/consttimelambda.png", plot = consttimelambda, device="png")#,path = "~/Desktop/evoSIR-DOmath/paper_plots")
#epidemic size vs lambda exponential time
simdata <- read.csv('data/exptime.csv')
simdata <- simdata[simdata$rho == 4,]
simdata <- simdata[simdata$n == 100000,]
simdata <- simdata[(simdata$lambda < 2) & (simdata$lambda > 0.0),]
lowerbound <- read.csv('theory/exprho4genfunc.csv')
ode <- read.csv('theory/exprho4size.csv')
newode <- read.csv('theory/ode3withrewiring.csv')
newode <- newode[newode$rho == 4,]
#newode <- head(newode,-2)
exptimelambda <- ggplot() +
geom_point(aes(simdata$lambda,1-simdata$S)) +
geom_vline(xintercept = 1.25) +
labs(y = "Size of Epidemic", x = expression(lambda)) +
title("Exponential Time Recovery Size of Epidemic vs lambda") +
geom_line(aes(lowerbound$lambda,1-lowerbound$z),linetype = "solid") +
geom_line(aes(ode$lambda,ode$t), linetype = "dotted") +
geom_line(aes(newode$lambda,newode$R), linetype = "dashed") +
theme_bw()+
xlim(0,2)
ggsave("paper_plots/exptimelambda.png", plot = exptimelambda, device="png")#,path = "~/Desktop/evoSIR-DOmath/paper_plots")
